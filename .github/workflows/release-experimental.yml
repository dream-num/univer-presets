name: 🧪 Release Experimental

on:
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read

jobs:
    prepare:
        runs-on: ubuntu-latest
        timeout-minutes: 5

        outputs:
            version: ${{ steps.experimental-version.outputs.version }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  submodules: true

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: 📌 Get package version (version + date)
              id: experimental-version
              run: |
                  echo "version=$(npm view @univerjs/core@experimental version)" >> $GITHUB_OUTPUT

    release-experimental:
        runs-on: ubuntu-latest
        needs: [prepare]
        timeout-minutes: 30

        steps:
            - name: Print version
              run: |
                  echo "version=${{ needs.prepare.outputs.version }}"

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  submodules: true

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  registry-url: https://registry.npmjs.org
                  cache: pnpm

            - name: 📦 Install dependencies
              run: |
                  pnpm install

            - name: 🔏 Set all monorepo's package version
              run: |
                  for package in $(ls packages); do
                      node -e "const fs = require('fs'); const package = JSON.parse(fs.readFileSync('./packages/$package/package.json')); package.version = '${{ needs.prepare.outputs.version }}'; fs.writeFileSync('./packages/$package/package.json', JSON.stringify(package, null, 4));"
                  done

            - name: 📦 Update dependencies (with new version)
              run: |
                  NEW_VERSION=${{ needs.prepare.outputs.version }} pnpm update:sdk

            - name: 🔍 Lint types
              run: |
                  pnpm lint:types

            - name: 🏗️ Build
              run: |
                  pnpm build

            - name: 🐙 Publish (With @univerjs)
              run: |
                  pnpm publish --access public --tag experimental -r --no-git-checks
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
